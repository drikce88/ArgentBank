swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error

  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error

  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      responses:
        '200':
          description: User profile retrieved successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error

    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile updated successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error

  /transactions:
    get:
      summary: "Get all transactions for the current month grouped by account"
      description: "Retrieves all transactions for the current month grouped by user accounts."
      security:
        - Bearer: []
      responses:
        '200':
          description: "Successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Transaction"
        '404':
          description: "Transactions not found"
        '500':
          description: "Internal server error"

    post:
      summary: "Create a new transaction"
      description: "Adds a new transaction for the user."
      security:
        - Bearer: []
      parameters:
        - name: "transactionData"
          in: "body"
          description: "Transaction data to be added"
          required: true
          schema:
            $ref: "#/definitions/Transaction"
      responses:
        '201':
          description: "Transaction created successfully"
          schema:
            $ref: "#/definitions/Transaction"
        '400':
          description: "Bad request"
        '500':
          description: "Internal server error"

  /transactions/{id}:
    get:
      summary: "Get details of a specific transaction"
      description: "Retrieves details of a specific transaction."
      security:
        - Bearer: []
      parameters:
        - name: "id"
          in: "path"
          description: "ID of the transaction to retrieve"
          required: true
          type: "string"
      responses:
        '200':
          description: "Successful operation"
          schema:
            $ref: "#/definitions/Transaction"
        '404':
          description: "Transaction not found"
        '500':
          description: "Internal server error"

    put:
      summary: "Update details of a specific transaction"
      description: "Updates details of a specific transaction."
      security:
        - Bearer: []
      parameters:
        - name: "id"
          in: "path"
          description: "ID of the transaction to update"
          required: true
          type: "string"
        - name: "transactionData"
          in: "body"
          description: "Updated transaction data"
          required: true
          schema:
            $ref: "#/definitions/Transaction"
      responses:
        '200':
          description: "Transaction updated successfully"
          schema:
            $ref: "#/definitions/Transaction"
        '400':
          description: "Bad request"
        '404':
          description: "Transaction not found"
        '500':
          description: "Internal server error"

    delete:
      summary: "Delete a specific transaction"
      description: "Deletes a specific transaction."
      security:
        - Bearer: []
      parameters:
        - name: "id"
          in: "path"
          description: "ID of the transaction to delete"
          required: true
          type: "string"
      responses:
        '204':
          description: "Transaction deleted successfully"
        '404':
          description: "Transaction not found"
        '500':
          description: "Internal server error"

securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
      userName:
        type: string
        description: user public name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      userName:
        type: string
  Transaction:
    type: "object"
    properties:
      id:
        type: "string"
      account_id:
        type: "string"
      amount:
        type: "number"
      date:
        type: "string"
      description:
        type: "string"
    required:
      - account_id
      - amount
      - date
